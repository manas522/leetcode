/**
 * Definition for a binary tree node.
 https://leetcode.com/problems/maximum-depth-of-binary-tree/
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var maxDepth = function(root) {
    return recursion(root);
    function recursion(node) {
        if (node === null) return null;
        const left = recursion(node.left);
        const right = recursion(node.right)
        return 1 + Math.max(left, right);
    }
};
